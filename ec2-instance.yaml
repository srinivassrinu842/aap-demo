---
- name: "CREATE EC2 INSTANCE"
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # Default to 2 if not passed
    instance_count: 2
    instance_type: t2.mirco
    region: us-east-1
    image_id: ami-020cba7c55df1f615
    key_name: nv-kp
    ec2_instance_tag: ec2_instance

  tasks:
    - name: "CREATE SECURITY GROUP"
      amazon.aws.ec2_security_group:
        name: ec2_security_group
        description: "security group for eks ec2 instance"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
            cidr_ip: 0.0.0.0/0
        region: "{{ region }}"

    - name: "CREATE EC2 INSTANCES"
      amazon.aws.ec2_instance:
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        security_groups:
          - ec2_security_group
        tags:
          Name: {{ ec2_instance_tag }}_{{ item }}
      register: ec2_instance
      loop: "{{ query('sequence', 'start=1 end=' + instance_count | string) }}"

    - name: "PRINT EC2 INSTANCE PUBLIC IP"
      ansible.builtin.debug:
        msg: "{{ ec2_instance.results[item].instances[0].tags.Name }} : {{ ec2_instance.results[item].instances[0].public_ip_address }}"
      loop: "{{ range(0, instance_count|int) | list }}"

    - name: "ADD EC2 INSTANCE TO INVENTORY"
      ansible.builtin.add_host:
        name: "{{ ec2_instance.results[item].instances[0].public_ip_address }}"
        groups:
          - ec2_instances
      loop: "{{ range(0, instance_count|int) | list }}"

    - name: "WAIT FOR EC2 INSTANCE TO BE READY"
      ansible.builtin.wait_for:
        host: "{{ ec2_instance.results[item].instances[0].public_ip_address }}"
        port: 22
        delay: 10
        timeout: 300
      loop: "{{ range(0, instance_count|int) | list }}"

- name: "CONNECT TO EC2 INSTANCE AND INSTALL APACHE2"
  hosts: ec2_instances
  connection: ssh
  user: ubuntu
  become: true

  tasks:
    - name: "UPDATE APT CACHE"
      ansible.builtin.apt:
        update_cache: true

    - name: "INSTALL APACHE2"
      ansible.builtin.apt:
        name: apache2
        state: present

    - name: "START APACHE2 SERVICE"
      ansible.builtin.service:
        name: apache2
        state: started
        enabled: true
